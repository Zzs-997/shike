一、项目的文件
    1、build：构建脚本目录
        1）build.js   ==>  生产环境构建脚本；
        2）check-versions.js   ==>  检查npm，node.js版本；
        3）utils.js   ==>  构建相关工具方法；
        4）vue-loader.conf.js   ==>  配置了css加载器以及编译css之后自动添加前缀；
        5）webpack.base.conf.js   ==>  webpack基本配置；
        6）webpack.dev.conf.js   ==>  webpack开发环境配置；
        7）webpack.prod.conf.js   ==>  webpack生产环境配置；

    2、config：项目配置
        1）dev.env.js   ==>  开发环境变量；
        2）index.js   ==>  项目配置文件；
        3）prod.env.js   ==>  生产环境变量；

    3、node_modules：npm 加载的项目依赖模块

    4、src（程序员源代码文件夹）：这里是我们要开发的目录，基本上要做的事情都在这个目录里。里面包含了几个目录及文件：
        1）assets：一般也是放置静态资源（一般放置多个组件公用的静态资源），放置在assets文件夹里面静态资源，在webpack打包的时候，webpack会把静态资源当做一个模块，打包JS文件里面。
        2）components：一般放置的是非路由组件（全局组件）
        3）router：前端路由，我们需要配置的路由路径写在index.js里面；
        4）App.vue：根组件，Vue当中的组件(.Vue)；
        5）main.js：呈现入口文件，也是整个程序当中最先执行的文件；

    5、static（public）：静态资源目录，如图片、字体等。不会被webpack构建
    6、index.html：首页入口文件，可以添加一些 meta 信息等

    7、package.json：认为是项目身份证，记录项目叫什么，项目中有哪些依赖，项目怎么运行。

    8、README.md：项目的说明性文件，markdown 格式

    9、.xxxx文件：这些是一些配置文件，包括语法配置，git配置等

二、项目的其他配置
    1、让项目运行起来的时候，让浏览器自动打开
        package.json文件
            "scripts": {
            "dev": "webpack-dev-server --inline --progress --config build/webpack.dev.conf.js",
            "start": "npm run dev --open",
            "build": "node build/build.js"
            },
        加上--open。

        config index.js文件
            host: 'localhost', // can be overwritten by process.env.HOST
            port: 8080, // can be overwritten by process.env.PORT, if port is in use, a free one will be determined
            autoOpenBrowser: true,
            errorOverlay: true,
            notifyOnErrors: true,
            poll: false, // https://webpack.js.org/configuration/dev-server/#devserver-watchoptions-
        autoOpenBrowser改为true。

    2、eslint校验功能关闭
        在根目录下，创建一个vue.config.js
          module.exports = {
          //  关闭eslint
            lintOnSave:false
          }
        比如：声明变量但是没有使用eslint校验工具报错。

    3、src文件夹简写方法，配置别名
        jsconfig.json配置别名@提示
            @代表的是src文件夹，这样将来文件过多，找的时候更方便。
        {
            "compilerOptions": {
                "baseUrl" : "./",
                "paths": {
                    "@/*": [
                    "scr/*"
                    ]
                }
            },
            "exclude": [
                "node_modules",
                "dist"
            ]
        }

三、项目路由的分析
    vue-router
    前端所谓的路由：KV键值对。
    key：URL（地址栏中的路径）
    value：相应的路由组件
    注意：项目是上中下结构

    路由组件：
        Home首页路由组件、Search路由组件、login登录路由、Refister注册路由
    非路由组件：
        Header
        Footer【在首页、搜索页】，但是在登录、注册页面没有

四、完成非路由组件Header与Footer业务
    在开发项目的时候：
        1、书写静态页面（HTML + CSS）
        2、拆分组件
        3、获取服务器的数据动态展示
        4、完成相应的动态业务逻辑
    注意：
        1、创建组件的时候，组件结构 + 组件样式 + 图片资源
        2、浏览器不识别less样式，需要通过less、less-loader【安装五版本】处理less，把less样式变为css样式，浏览器才能识别。
        3、如果想让组件识别less样式，需要在style标签加lang="less"

    使用组件的步骤（非路由组件）：
        1、创建或者定义组件
        2、引入
        3、注册
        4、使用

五、路由组件的搭建
    vue-router
    在上面分析的时候，路由组件应该有四个：Home、Search、Login、Register
    -component文件夹：经常放置非路由组件（共用全局组件）
    -pages|views文件夹：经常放置路由组件

    1、配置路由
        项目当中配置的路由一般放置在router文件夹中

    2、总结
        路由组件与非路由组件的区别？
            1、路由组件一般放置在pages|views文件夹中
                非路由组件一般放在components文件夹中
            2、路由组件一般需要在router文件夹中注册（使用的即为组件的名字）
                非路由组件在使用的时候一般是以标签的形式
            3、注册完路由，不管路由组件、还是非路由组件身上都有$route\$router属性
                $router：一般获取路由信息【路径、query、param等等】
                $router：一般进行编程式导航进行路由跳转【push|replace】

    3、路由的跳转
        路由的跳转有两种形式：
            声明式导航router-link，可以进行路由的跳转
            编程式导航push|replace：可以进行路由的跳转
        注：编程式导航能做其他的业务逻辑（如登录）

六、Footer组件显示与隐藏
    非路由组件在有些页面没有，需要隐藏
    显示或隐藏组件：v-if|v-show

    1、可以根据组件身上的$route获取当前路由的信息，通过路由的路径判断Footer的显示与隐藏
        v-show="$route.path=='/home'"   在首页显示
    2、配置路由的时候，可以给路由添加路由原信息【meta】，路由需要配置对象，它的key不能乱写。

七、路由传参
  1、路由的跳转有几种方式？
    比如：A->B
    声明式导航：router-link（务必要有to属性），可以实现路由的跳转
    编程式跳转：利用的组件实例的$router.push|replace方法，可以实现路由的跳转。（可以书写一些自己的业务）

  2、路由传参有几种方式？
    params参数：属于路径当中的一部分，需要注意在配置路由的时候需要占位。
    query参数：不属于路径当中的一部分，类似于ajax中的queryString  /home?k=v&kv= 不需要占位

八、模块组件拆分
  先把静态页面完成
  拆分出静态组件
    HTML + CSS + 图片资源 【结构 样式 图片资源】
  获取服务器的数据进行展示
  动态业务

  把每一个模块拆分开，分别注册使用


九、什么是后台管理系统项目？

